class SimpleAudioSystem {
  private isEnabled = true;

  async speakText(text: string): Promise<void> {
    if (!this.isEnabled || !('speechSynthesis' in window)) return;
    
    try {
      const utterance = new SpeechSynthesisUtterance(text);
      utterance.lang = 'ru-RU';
      utterance.rate = 0.85;
      utterance.volume = 0.8;
      speechSynthesis.speak(utterance);
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ –æ–∑–≤—É—á–∫–∏:', error);
    }
  }

  async playCellAudio(cellNumber: string): Promise<void> {
    await this.speakText(`–Ø—á–µ–π–∫–∞ ${cellNumber}`);
  }

  async playDiscountAudio(): Promise<void> {
    await this.speakText('–¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –í–ë –∫–æ—à–µ–ª–µ–∫');
  }

  async playCheckCameraAudio(): Promise<void> {
    await this.speakText('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π');
  }

  async playRateUsAudio(): Promise<void> {
    await this.speakText('–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏');
  }

  async playSuccessSound(): Promise<void> {
    // –ü—Ä–æ—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –∑–≤—É–∫
    console.log('üîä –£—Å–ø–µ—Ö!');
  }

  async playErrorSound(): Promise<void> {
    console.log('üîä –û—à–∏–±–∫–∞!');
  }

  async playFindCellAudio(): Promise<void> {
    await this.speakText('–ù–∞–π–¥–∏—Ç–µ –≤–∞—à—É —è—á–µ–π–∫—É –Ω–æ–º–µ—Ä');
  }

  async playCellOpenAudio(): Promise<void> {
    await this.speakText('–Ø—á–µ–π–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞, –∑–∞–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä');
  }

  async playThankYouAudio(): Promise<void> {
    await this.speakText('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É');
  }

  async playGoodDayAudio(): Promise<void> {
    await this.speakText('–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è');
  }

  enable() {
    this.isEnabled = true;
  }

  disable() {
    this.isEnabled = false;
  }

  isAudioEnabled(): boolean {
    return this.isEnabled;
  }

  initialize() {
    console.log('üéµ –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–∑–≤—É—á–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
}

export const simpleAudio = new SimpleAudioSystem();