import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import Icon from '@/components/ui/icon';

const SimpleAudioTester: React.FC = () => {
  const [isPlaying, setIsPlaying] = useState<string | null>(null);

  const testAudio = async (type: string, text: string) => {
    setIsPlaying(type);
    try {
      if ('speechSynthesis' in window) {
        const utterance = new SpeechSynthesisUtterance(text);
        utterance.lang = 'ru-RU';
        utterance.rate = 0.85;
        utterance.volume = 0.8;
        speechSynthesis.speak(utterance);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–∑–≤—É—á–∫–∏:', error);
    } finally {
      setTimeout(() => setIsPlaying(null), 2000);
    }
  };

  return (
    <Card className="w-full max-w-md mx-auto">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Icon name="Volume2" size={20} />
          –¢–µ—Å—Ç –æ–∑–≤—É—á–∫–∏
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-3">
        <div className="grid grid-cols-2 gap-2">
          <Button
            onClick={() => testAudio('cell', '–Ø—á–µ–π–∫–∞ –ê15')}
            disabled={isPlaying === 'cell'}
            size="sm"
            className="flex items-center gap-1"
          >
            {isPlaying === 'cell' ? (
              <Icon name="Loader2" size={14} className="animate-spin" />
            ) : (
              <Icon name="MapPin" size={14} />
            )}
            –Ø—á–µ–π–∫–∞
          </Button>

          <Button
            onClick={() => testAudio('discount', '–¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –í–ë –∫–æ—à–µ–ª–µ–∫')}
            disabled={isPlaying === 'discount'}
            size="sm"
            className="flex items-center gap-1"
          >
            {isPlaying === 'discount' ? (
              <Icon name="Loader2" size={14} className="animate-spin" />
            ) : (
              <Icon name="Tag" size={14} />
            )}
            –°–∫–∏–¥–∫–∏
          </Button>

          <Button
            onClick={() => testAudio('camera', '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π')}
            disabled={isPlaying === 'camera'}
            size="sm"
            className="flex items-center gap-1"
          >
            {isPlaying === 'camera' ? (
              <Icon name="Loader2" size={14} className="animate-spin" />
            ) : (
              <Icon name="Camera" size={14} />
            )}
            –ü—Ä–æ–≤–µ—Ä–∫–∞
          </Button>

          <Button
            onClick={() => testAudio('rate', '–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏')}
            disabled={isPlaying === 'rate'}
            size="sm"
            className="flex items-center gap-1"
          >
            {isPlaying === 'rate' ? (
              <Icon name="Loader2" size={14} className="animate-spin" />
            ) : (
              <Icon name="Star" size={14} />
            )}
            –û—Ü–µ–Ω–∫–∞
          </Button>
        </div>
        
        <div className="text-xs text-gray-500 text-center mt-3">
          üîä –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –±—Ä–∞—É–∑–µ—Ä–∞
        </div>
      </CardContent>
    </Card>
  );
};

export default SimpleAudioTester;