import React, { useEffect, useState } from 'react';

const AudioSetup: React.FC = () => {
  const [audioStatus, setAudioStatus] = useState<'checking' | 'ready' | 'demo'>('checking');
  
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤
    const checkAudioFiles = async () => {
      try {
        // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–¥–∏–Ω –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        const testAudio = new Audio('/audio/–¥–æ–±—Ä–æ-–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å.mp3');
        testAudio.volume = 0;
        await testAudio.play();
        setAudioStatus('ready');
      } catch (error) {
        setAudioStatus('demo');
      }
    };
    
    checkAudioFiles();
  }, []);

  if (audioStatus === 'checking') {
    return (
      <div className="fixed top-4 right-4 bg-blue-100 text-blue-800 px-3 py-2 rounded-lg text-sm">
        üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º—ã...
      </div>
    );
  }

  if (audioStatus === 'demo') {
    return (
      <div className="fixed top-4 right-4 bg-orange-100 text-orange-800 px-3 py-2 rounded-lg text-sm max-w-sm">
        üîä –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏. 
        <br />
        <small>–î–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ –æ–±–ª–∞–∫–∞ –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –æ–∑–≤—É—á–∫–∏</small>
      </div>
    );
  }

  return (
    <div className="fixed top-4 right-4 bg-green-100 text-green-800 px-3 py-2 rounded-lg text-sm">
      ‚úÖ –ê—É–¥–∏–æ —Ñ–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã
    </div>
  );
};

export default AudioSetup;