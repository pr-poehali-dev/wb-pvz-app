import React, { useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import Icon from '@/components/ui/icon';
import { categorizeAudioFiles, getFunctionDisplayName, type AudioMapping } from '@/utils/audioRecognition';

interface AudioUploaderProps {
  onClose: () => void;
}

interface ProcessedFile {
  file: File;
  mapping: AudioMapping;
  status: 'pending' | 'uploaded' | 'failed';
  displayName: string;
}

const AudioUploader = ({ onClose }: AudioUploaderProps) => {
  const [uploadStatus, setUploadStatus] = useState<Record<string, 'pending' | 'uploaded'>>({});
  const [processedFiles, setProcessedFiles] = useState<ProcessedFile[]>([]);
  const [unrecognizedFiles, setUnrecognizedFiles] = useState<File[]>([]);
  const [isProcessing, setIsProcessing] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã —É–∂–µ –µ—Å—Ç—å
  React.useEffect(() => {
    const checkExistingFiles = () => {
      const newStatus: Record<string, 'pending' | 'uploaded'> = {};
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
      const basicFiles = ['discount', 'camera', 'rate'];
      basicFiles.forEach(fileType => {
        if (localStorage.getItem(`audio_${fileType}`)) {
          newStatus[fileType] = 'uploaded';
        }
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã —è—á–µ–µ–∫
      let cellsCount = 0;
      for (let i = 1; i <= 100; i++) {
        if (localStorage.getItem(`audio_cells_${i}`)) {
          cellsCount++;
        }
      }
      
      if (cellsCount > 0) {
        newStatus['cells_folder'] = 'uploaded';
        console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${cellsCount} —Ñ–∞–π–ª–æ–≤ —è—á–µ–µ–∫`);
      }
      
      setUploadStatus(newStatus);
    };
    
    checkExistingFiles();
  }, []);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ–π –ø–∞–ø–∫–∏ —Å –∞—É–¥–∏–æ
  const handleBulkUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = event.target.files;
    if (!files || files.length === 0) return;

    setIsProcessing(true);
    console.log(`üìÅ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ ${files.length} —Ñ–∞–π–ª–æ–≤`);

    const { recognized, unrecognized } = categorizeAudioFiles(Array.from(files));
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    const processed: ProcessedFile[] = recognized.map(({ file, mapping }) => ({
      file,
      mapping,
      status: 'pending' as const,
      displayName: getFunctionDisplayName(
        mapping.type,
        mapping.cellNumber
      )
    }));

    setProcessedFiles(processed);
    setUnrecognizedFiles(unrecognized);

    console.log(`‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: ${recognized.length} —Ñ–∞–π–ª–æ–≤`);
    console.log(`‚ùì –ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: ${unrecognized.length} —Ñ–∞–π–ª–æ–≤`);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    let uploadedCount = 0;
    for (const processedFile of processed) {
      try {
        await saveAudioFile(processedFile);
        uploadedCount++;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ñ–∞–π–ª–∞
        setProcessedFiles(prev => 
          prev.map(pf => 
            pf.file === processedFile.file 
              ? { ...pf, status: 'uploaded' }
              : pf
          )
        );
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${processedFile.file.name}:`, error);
        setProcessedFiles(prev => 
          prev.map(pf => 
            pf.file === processedFile.file 
              ? { ...pf, status: 'failed' }
              : pf
          )
        );
      }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å
    const newStatus = { ...uploadStatus };
    if (recognized.some(r => r.mapping.type === 'discount')) newStatus['discount'] = 'uploaded';
    if (recognized.some(r => r.mapping.type === 'camera')) newStatus['camera'] = 'uploaded';
    if (recognized.some(r => r.mapping.type === 'rate')) newStatus['rate'] = 'uploaded';
    
    const cellFiles = recognized.filter(r => r.mapping.type === 'cell');
    if (cellFiles.length > 0) newStatus['cells_folder'] = 'uploaded';
    
    setUploadStatus(newStatus);
    setIsProcessing(false);
    
    console.log(`üéâ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${uploadedCount}/${processed.length}`);
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞
  const saveAudioFile = async (processedFile: ProcessedFile): Promise<void> => {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      
      reader.onload = () => {
        try {
          const base64 = reader.result as string;
          let storageKey: string;
          
          if (processedFile.mapping.type === 'cell') {
            storageKey = `audio_cells_${processedFile.mapping.cellNumber}`;
          } else {
            storageKey = `audio_${processedFile.mapping.type}`;
          }
          
          localStorage.setItem(storageKey, base64);
          console.log(`‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω: ${processedFile.file.name} -> ${storageKey}`);
          resolve();
        } catch (error) {
          reject(error);
        }
      };
      
      reader.onerror = () => reject(new Error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞'));
      reader.readAsDataURL(processedFile.file);
    });
  };

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å Mail.ru Cloud (–∏–º–∏—Ç–∞—Ü–∏—è)
  const handleAutoDownload = async () => {
    setIsProcessing(true);
    console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∑–∞–≥—Ä—É–∑–∫—É —Å Mail.ru Cloud...');
    
    try {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤ —Å –≤–∞—à–µ–π —Å—Å—ã–ª–∫–∏
      const filesToDownload = [
        { name: 'discount.mp3', type: 'discount' },
        { name: 'camera.mp3', type: 'camera' },
        { name: 'rate.mp3', type: 'rate' },
      ];
      
      // –ò–º–∏—Ç–∏—Ä—É–µ–º —è—á–µ–π–∫–∏
      for (let i = 1; i <= 10; i++) {
        filesToDownload.push({ name: `${i}.mp3`, type: 'cell', cellNumber: i });
      }
      
      const processed: ProcessedFile[] = [];
      
      for (const fileInfo of filesToDownload) {
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
        await new Promise(resolve => setTimeout(resolve, 200));
        
        // –°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π –∞—É–¥–∏–æ—Ñ–∞–π–ª –∫–∞–∫ –∏–º–∏—Ç–∞—Ü–∏—é (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç—É—Ç –±—ã–ª –±—ã fetch)
        console.log(`üì• –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏: ${fileInfo.name}`);
        
        const mockMapping = {
          type: fileInfo.type as 'discount' | 'camera' | 'rate' | 'cell',
          cellNumber: (fileInfo as any).cellNumber
        };
        
        // –°–æ–∑–¥–∞—ë–º –∏–º–∏—Ç–∞—Ü–∏—é —Ñ–∞–π–ª–∞
        const mockFile = new File([''], fileInfo.name, { type: 'audio/mpeg' });
        
        const processedFile: ProcessedFile = {
          file: mockFile,
          mapping: mockMapping,
          status: 'uploaded',
          displayName: getFunctionDisplayName(mockMapping.type, mockMapping.cellNumber)
        };
        
        processed.push(processedFile);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Å—Ç—É—é –∑–∞–ø–∏—Å—å –≤ localStorage (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç—É—Ç –±—ã–ª –±—ã base64 –∞—É–¥–∏–æ)
        const storageKey = mockMapping.type === 'cell' 
          ? `audio_cells_${mockMapping.cellNumber}` 
          : `audio_${mockMapping.type}`;
        
        localStorage.setItem(storageKey, 'data:audio/mpeg;base64,placeholder');
        console.log(`‚úÖ –ò–º–∏—Ç–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${storageKey}`);
      }
      
      setProcessedFiles(processed);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
      const newStatus = {
        discount: 'uploaded' as const,
        camera: 'uploaded' as const,
        rate: 'uploaded' as const,
        cells_folder: 'uploaded' as const
      };
      
      setUploadStatus(newStatus);
      
      console.log('üéâ –ò–º–∏—Ç–∞—Ü–∏—è –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–º–∏—Ç–∞—Ü–∏–∏
      const notification = document.createElement('div');
      notification.innerHTML = `
        <div style="position: fixed; top: 20px; left: 50%; transform: translateX(-50%); background: #059669; color: white; padding: 16px 20px; border-radius: 12px; box-shadow: 0 4px 20px rgba(0,0,0,0.2); z-index: 9999; font-family: system-ui; font-size: 14px; max-width: 400px; text-align: center;">
          <div style="font-weight: 600; margin-bottom: 8px;">üéâ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</div>
          <div>‚ö†Ô∏è –î–ï–ú–û: –†–µ–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Ä—É—á–Ω—É—é –≤—ã—à–µ</div>
        </div>
      `;
      document.body.appendChild(notification);
      setTimeout(() => document.body.removeChild(notification), 5000);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏:', error);
    } finally {
      setIsProcessing(false);
    }
  };

  // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
  const clearAllAudio = () => {
    Object.keys(localStorage).forEach(key => {
      if (key.startsWith('audio_')) {
        localStorage.removeItem(key);
      }
    });
    setUploadStatus({});
    setProcessedFiles([]);
    setUnrecognizedFiles([]);
    console.log('üóëÔ∏è –í—Å–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã');
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'uploaded': return <Icon name="CheckCircle" className="text-green-500" size={16} />;
      case 'failed': return <Icon name="XCircle" className="text-red-500" size={16} />;
      default: return <Icon name="Clock" className="text-yellow-500" size={16} />;
    }
  };

  const getFileTypeIcon = (type: string) => {
    switch (type) {
      case 'discount': return <Icon name="Percent" className="text-purple-500" size={16} />;
      case 'camera': return <Icon name="Camera" className="text-blue-500" size={16} />;
      case 'rate': return <Icon name="Star" className="text-yellow-500" size={16} />;
      case 'cell': return <Icon name="Package" className="text-green-500" size={16} />;
      default: return <Icon name="Music" className="text-gray-500" size={16} />;
    }
  };

  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
      <Card className="w-full max-w-4xl max-h-[90vh] overflow-y-auto">
        <CardContent className="p-6">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-xl font-semibold">–£–º–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤</h2>
            <Button variant="ghost" size="icon" onClick={onClose}>
              <Icon name="X" size={20} />
            </Button>
          </div>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
          <div className="mb-6 p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg border border-blue-200">
            <h3 className="font-medium mb-2 flex items-center gap-2">
              <Icon name="Lightbulb" size={16} className="text-blue-600" />
              –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
            </h3>
            <div className="text-sm text-gray-700 space-y-2">
              <p>üéØ <strong>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å—é –ø–∞–ø–∫—É —Å—Ä–∞–∑—É</strong> - —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é!</p>
              <div className="grid grid-cols-2 gap-4 mt-3">
                <div>
                  <p className="font-medium">–ü—Ä–∏–º–µ—Ä—ã –Ω–∞–∑–≤–∞–Ω–∏–π:</p>
                  <ul className="text-xs space-y-1 mt-1">
                    <li>‚Ä¢ <code>discount.mp3</code> ‚Üí –°–∫–∏–¥–∫–∏</li>
                    <li>‚Ä¢ <code>camera.mp3</code> ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π</li>
                    <li>‚Ä¢ <code>1.mp3, 2.mp3...</code> ‚Üí –Ø—á–µ–π–∫–∏</li>
                    <li>‚Ä¢ <code>—è—á–µ–π–∫–∞15.mp3</code> ‚Üí –Ø—á–µ–π–∫–∞ 15</li>
                  </ul>
                </div>
                <div>
                  <p className="font-medium">–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</p>
                  <ul className="text-xs space-y-1 mt-1">
                    <li>‚Ä¢ —Å–∫–∏–¥–∫–∞, –∫–æ—à–µ–ª—ë–∫, —Ç–æ–≤–∞—Ä—ã</li>
                    <li>‚Ä¢ –∫–∞–º–µ—Ä–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —Ç–æ–≤–∞—Ä</li>
                    <li>‚Ä¢ –æ—Ü–µ–Ω–∏—Ç–µ, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –≤—ã–¥–∞—á–∞</li>
                    <li>‚Ä¢ –ª—é–±—ã–µ —Ü–∏—Ñ—Ä—ã (–¥–ª—è —è—á–µ–µ–∫)</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>

          {/* –°–ø–æ—Å–æ–±—ã –∑–∞–≥—Ä—É–∑–∫–∏ */}
          <div className="mb-6 space-y-4">
            {/* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ */}
            <div className="p-6 border-2 border-dashed border-green-300 rounded-lg bg-gradient-to-br from-green-50 to-emerald-50 text-center">
              <div className="flex flex-col items-center gap-4">
                <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center">
                  <Icon name="Download" size={32} className="text-green-600" />
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-green-800">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞</h3>
                  <p className="text-sm text-green-600 mt-1">
                    –ü–æ–ø—Ä–æ–±—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã —Å Mail.ru Cloud
                  </p>
                </div>
                <Button
                  onClick={handleAutoDownload}
                  disabled={isProcessing}
                  className="bg-green-600 hover:bg-green-700 text-white"
                >
                  {isProcessing ? (
                    <>
                      <Icon name="Loader2" size={16} className="animate-spin mr-2" />
                      –ó–∞–≥—Ä—É–∂–∞—é...
                    </>
                  ) : (
                    <>
                      <Icon name="Download" size={16} className="mr-2" />
                      –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                    </>
                  )}
                </Button>
                <p className="text-xs text-green-700 max-w-md">
                  ‚ö†Ô∏è –î–µ–º–æ-—Ñ—É–Ω–∫—Ü–∏—è: –ò–º–∏—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ –æ–±–ª–∞–∫–∞. –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—á–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –Ω–∏–∂–µ.
                </p>
              </div>
            </div>

            {/* –†—É—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ */}
            <div className="p-6 border-2 border-dashed border-purple-300 rounded-lg bg-gradient-to-br from-purple-50 to-pink-50 text-center">
              <div className="flex flex-col items-center gap-4">
                <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center">
                  <Icon name="Upload" size={32} className="text-purple-600" />
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-purple-800">–†—É—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–∞–ø–∫–∏</h3>
                  <p className="text-sm text-purple-600 mt-1">
                    –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª—ã —Å Mail.ru Cloud –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∑–¥–µ—Å—å
                  </p>
                </div>
                <Input
                  type="file"
                  accept="audio/*"
                  multiple
                  onChange={handleBulkUpload}
                  disabled={isProcessing}
                  className="max-w-xs"
                />
                <div className="text-xs text-purple-700 max-w-md space-y-1">
                  <p>üìÅ <a href="https://cloud.mail.ru/public/bsFp/vkbT876fD" target="_blank" rel="noopener noreferrer" className="underline font-medium">–°–∫–∞—á–∞—Ç—å –∞—Ä—Ö–∏–≤ —Å Mail.ru Cloud</a></p>
                  <p>üì• –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã (Ctrl+A)</p>
                </div>
                {isProcessing && (
                  <div className="flex items-center gap-2 text-purple-600">
                    <Icon name="Loader2" size={16} className="animate-spin" />
                    <span className="text-sm">–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª—ã...</span>
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ */}
          {processedFiles.length > 0 && (
            <div className="mb-6">
              <h3 className="font-medium mb-3 flex items-center gap-2">
                <Icon name="CheckCircle2" size={16} className="text-green-600" />
                –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã ({processedFiles.length})
              </h3>
              <div className="space-y-2 max-h-48 overflow-y-auto">
                {processedFiles.map((pf, index) => (
                  <div key={index} className="flex items-center gap-3 p-3 bg-green-50 border border-green-200 rounded-lg">
                    {getFileTypeIcon(pf.mapping.type)}
                    <div className="flex-1">
                      <div className="font-medium text-sm">{pf.displayName}</div>
                      <div className="text-xs text-gray-500">{pf.file.name}</div>
                    </div>
                    {getStatusIcon(pf.status)}
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* –ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã */}
          {unrecognizedFiles.length > 0 && (
            <div className="mb-6">
              <h3 className="font-medium mb-3 flex items-center gap-2">
                <Icon name="AlertTriangle" size={16} className="text-yellow-600" />
                –ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã ({unrecognizedFiles.length})
              </h3>
              <div className="space-y-2 max-h-32 overflow-y-auto">
                {unrecognizedFiles.map((file, index) => (
                  <div key={index} className="flex items-center gap-3 p-2 bg-yellow-50 border border-yellow-200 rounded text-sm">
                    <Icon name="Music" className="text-yellow-600" size={16} />
                    <span className="flex-1">{file.name}</span>
                    <span className="text-xs text-yellow-600">–ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Ñ–∞–π–ª</span>
                  </div>
                ))}
              </div>
              <p className="text-xs text-yellow-700 mt-2">
                üí° –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Ñ–∞–π–ª—ã —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∏–º–µ—Ä–∞–º –≤—ã—à–µ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–Ω–æ–≤–∞
              </p>
            </div>
          )}

          {/* –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ */}
          <div className="mb-6">
            <h3 className="font-medium mb-3">–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å</h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
              {[
                { key: 'discount', label: '–°–∫–∏–¥–∫–∏', icon: 'Percent' },
                { key: 'camera', label: '–ö–∞–º–µ—Ä–∞', icon: 'Camera' },
                { key: 'rate', label: '–û—Ü–µ–Ω–∫–∞', icon: 'Star' },
                { key: 'cells_folder', label: '–Ø—á–µ–π–∫–∏', icon: 'Package' }
              ].map(({ key, label, icon }) => (
                <div key={key} className={`p-3 rounded-lg border text-center ${
                  uploadStatus[key] === 'uploaded' 
                    ? 'bg-green-50 border-green-200 text-green-800' 
                    : 'bg-gray-50 border-gray-200 text-gray-500'
                }`}>
                  <Icon name={icon as any} size={20} className="mx-auto mb-1" />
                  <div className="text-sm font-medium">{label}</div>
                  <div className="text-xs">
                    {uploadStatus[key] === 'uploaded' ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ' : '‚è≥ –ù–µ—Ç —Ñ–∞–π–ª–∞'}
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex gap-2 mt-6">
            <Button onClick={onClose} className="flex-1">
              <Icon name="Check" size={16} className="mr-2" />
              –ì–æ—Ç–æ–≤–æ
            </Button>
            <Button 
              variant="outline" 
              onClick={() => {
                console.log('=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ê–£–î–ò–û–§–ê–ô–õ–û–í ===');
                const audioKeys = Object.keys(localStorage).filter(key => key.startsWith('audio_'));
                console.log(`–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${audioKeys.length}`);
                audioKeys.forEach(key => {
                  const value = localStorage.getItem(key);
                  console.log(`üìÅ ${key}: ${value ? `${(value.length / 1024).toFixed(1)}KB` : 'null'}`);
                });
                console.log('=== –ö–û–ù–ï–¶ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ===');
              }}
            >
              <Icon name="Bug" size={16} className="mr-2" />
              –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
            </Button>
            <Button 
              variant="outline" 
              onClick={clearAllAudio}
              className="text-red-600 hover:text-red-700"
            >
              <Icon name="Trash2" size={16} className="mr-2" />
              –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default AudioUploader;