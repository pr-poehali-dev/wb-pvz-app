import React, { useEffect } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import CloudAudioLoader from './CloudAudioLoader';

// –ò–º–ø–æ—Ä—Ç –¥–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import FileStatusGrid from './AudioUploader/FileStatusGrid';
import ProcessedFilesList from './AudioUploader/ProcessedFilesList';
import UploadMethods from './AudioUploader/UploadMethods';
import AudioPlayer from './AudioUploader/AudioPlayer';
import { useAudioUploader } from './AudioUploader/useAudioUploader';

interface AudioUploaderProps {
  onClose: () => void;
}

const AudioUploader = ({ onClose }: AudioUploaderProps) => {
  const {
    uploadStatus,
    processedFiles,
    audioFiles,
    currentFileIndex,
    isProcessing,
    showCloudLoader,
    showAudioPlayer,
    setShowCloudLoader,
    setShowAudioPlayer,
    handleBulkUpload,
    assignAudioToFunction,
    skipCurrentFile,
    getCurrentFile,
    checkExistingFiles,
    clearAllAudio,
    runDiagnostics,
    updateStatusAfterCloudLoad
  } = useAudioUploader();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã —É–∂–µ –µ—Å—Ç—å
  useEffect(() => {
    checkExistingFiles();
  }, []);

  const currentFile = getCurrentFile();

  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
      {showAudioPlayer && currentFile ? (
        // –†–µ–∂–∏–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –∞—É–¥–∏–æ
        <div className="flex flex-col items-center gap-4">
          <div className="bg-white p-4 rounded-lg shadow-lg">
            <div className="text-center text-sm text-gray-600 mb-2">
              –§–∞–π–ª {currentFileIndex + 1} –∏–∑ {audioFiles.length}
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2 mb-4">
              <div 
                className="bg-blue-600 h-2 rounded-full" 
                style={{ width: `${((currentFileIndex) / audioFiles.length) * 100}%` }}
              />
            </div>
          </div>
          
          <AudioPlayer
            file={currentFile}
            onAssign={assignAudioToFunction}
            onSkip={skipCurrentFile}
          />
          
          <Button
            onClick={() => {
              setShowAudioPlayer(false);
              // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
              // setAudioFiles([]);
              // setCurrentFileIndex(0);
            }}
            variant="outline"
            className="mt-4"
          >
            <Icon name="X" size={16} className="mr-2" />
            –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
          </Button>
        </div>
      ) : (
        // –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
        <Card className="w-full max-w-4xl max-h-[90vh] overflow-y-auto">
          <CardContent className="p-6">
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-xl font-semibold">–ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–∏–≤—è–∑–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤</h2>
              <Button variant="ghost" size="icon" onClick={onClose}>
                <Icon name="X" size={20} />
              </Button>
            </div>

            {/* –ù–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è */}
            <div className="mb-6 p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg border border-blue-200">
              <h3 className="font-medium mb-2 flex items-center gap-2">
                <Icon name="Headphones" size={16} className="text-blue-600" />
                –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–∏–≤—è–∑–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
              </h3>
              <div className="text-sm text-gray-700 space-y-2">
                <p>üéß <strong>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã</strong> - —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ø—Ä–æ—Å–ª—É—à–∞—Ç—å –∫–∞–∂–¥—ã–π –∏ –≤—ã–±—Ä–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é!</p>
                <div className="grid grid-cols-2 gap-4 mt-3">
                  <div>
                    <p className="font-medium">–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</p>
                    <ul className="text-xs space-y-1 mt-1">
                      <li>‚Ä¢ <strong>–°–∫–∏–¥–∫–∏/–ö–æ—à–µ–ª—ë–∫</strong> - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–∞—Ö</li>
                      <li>‚Ä¢ <strong>–ö–∞–º–µ—Ä–∞</strong> - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞ –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π</li>
                      <li>‚Ä¢ <strong>–û—Ü–µ–Ω–∫–∞</strong> - –ø—Ä–æ—Å—å–±–∞ –æ—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</li>
                      <li>‚Ä¢ <strong>–Ø—á–µ–π–∫–∏</strong> - –æ–∑–≤—É—á–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ —è—á–µ–µ–∫ (1-999)</li>
                    </ul>
                  </div>
                  <div>
                    <p className="font-medium">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</p>
                    <ul className="text-xs space-y-1 mt-1">
                      <li>‚Ä¢ –ü—Ä–æ—Å–ª—É—à–∞–π—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª</li>
                      <li>‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é —Ñ—É–Ω–∫—Ü–∏—é</li>
                      <li>‚Ä¢ –î–ª—è —è—á–µ–µ–∫ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä</li>
                      <li>‚Ä¢ –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ñ–∞–π–ª—É</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>

            {/* –°–ø–æ—Å–æ–±—ã –∑–∞–≥—Ä—É–∑–∫–∏ */}
            <UploadMethods 
              isProcessing={isProcessing}
              onBulkUpload={handleBulkUpload}
              onShowCloudLoader={() => setShowCloudLoader(true)}
            />

            {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ */}
            <ProcessedFilesList processedFiles={processedFiles} />

            {/* –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ */}
            <FileStatusGrid uploadStatus={uploadStatus} />

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div className="flex gap-2 mt-6">
              <Button onClick={onClose} className="flex-1">
                <Icon name="Check" size={16} className="mr-2" />
                –ì–æ—Ç–æ–≤–æ
              </Button>
              <Button 
                variant="outline" 
                onClick={runDiagnostics}
              >
                <Icon name="Bug" size={16} className="mr-2" />
                –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
              </Button>
              <Button 
                variant="outline" 
                onClick={clearAllAudio}
                className="text-red-600 hover:text-red-700"
              >
                <Icon name="Trash2" size={16} className="mr-2" />
                –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë
              </Button>
            </div>
          </CardContent>
        </Card>
      )}

      {/* CloudAudioLoader Modal */}
      {showCloudLoader && (
        <CloudAudioLoader 
          onClose={() => setShowCloudLoader(false)}
          onLoadComplete={updateStatusAfterCloudLoad}
        />
      )}
    </div>
  );
};

export default AudioUploader;