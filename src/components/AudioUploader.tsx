import React, { useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import Icon from '@/components/ui/icon';

interface AudioUploaderProps {
  onClose: () => void;
}

const AudioUploader = ({ onClose }: AudioUploaderProps) => {
  const [uploadStatus, setUploadStatus] = useState<Record<string, 'pending' | 'uploaded'>>({});

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã —É–∂–µ –µ—Å—Ç—å
  React.useEffect(() => {
    const checkExistingFiles = () => {
      const newStatus: Record<string, 'pending' | 'uploaded'> = {};
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
      audioFiles.forEach(file => {
        if (localStorage.getItem(`audio_${file.id}`)) {
          newStatus[file.id] = 'uploaded';
        }
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã —è—á–µ–µ–∫ (–ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–∞–ø–∫–∏)
      let cellsCount = 0;
      for (let i = 1; i <= 50; i++) {
        if (localStorage.getItem(`audio_cells_${i}`)) {
          cellsCount++;
        }
      }
      
      if (cellsCount > 0) {
        newStatus['cells_folder'] = 'uploaded';
        console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${cellsCount} —Ñ–∞–π–ª–æ–≤ —è—á–µ–µ–∫`);
      }
      
      setUploadStatus(newStatus);
    };
    
    checkExistingFiles();
  }, []);

  const audioFiles = [
    { id: 'discount', name: 'discount.mp3', label: '–¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –í–ë –∫–æ—à–µ–ª–µ–∫' },
    { id: 'camera', name: 'camera.mp3', label: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π' },
    { id: 'rate', name: 'rate.mp3', label: '–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏' },
  ];

  const handleCellsFolderUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = event.target.files;
    if (!files) return;

    console.log(`üìÅ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∫–∞ ${files.length} —Ñ–∞–π–ª–æ–≤ —è—á–µ–µ–∫`);
    const audioFiles = Array.from(files).filter(file => file.type.startsWith('audio/'));
    let processedCount = 0;

    for (const file of audioFiles) {
      try {
        const fileName = file.name.replace(/\.(mp3|wav|ogg)$/i, '');
        const cellNumber = fileName;
        
        const reader = new FileReader();
        reader.onload = () => {
          const base64 = reader.result as string;
          const storageKey = `audio_cells_${cellNumber}`;
          localStorage.setItem(storageKey, base64);
          console.log(`‚úÖ –Ø—á–µ–π–∫–∞ ${cellNumber} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ (${file.name})`);
          
          processedCount++;
          if (processedCount === audioFiles.length) {
            setUploadStatus(prev => ({ ...prev, 'cells_folder': 'uploaded' }));
            console.log(`üéâ –ü–∞–ø–∫–∞ —è—á–µ–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${processedCount}`);
          }
        };
        reader.onerror = () => {
          console.error(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ ${file.name}`);
          processedCount++;
        };
        reader.readAsDataURL(file);
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ ${file.name}:`, error);
        processedCount++;
      }
    }
  };

  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>, fileId: string, folder?: string) => {
    const file = event.target.files?.[0];
    if (file && file.type.startsWith('audio/')) {
      try {
        // –°–æ–∑–¥–∞—ë–º URL –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        const audioUrl = URL.createObjectURL(file);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á –¥–ª—è localStorage
        let storageKey;
        if (folder === 'cells') {
          const cellNumber = fileId.replace('cell-', '');
          storageKey = `audio_cells_${cellNumber}`;
        } else {
          storageKey = `audio_${fileId}`;
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –∫–∞–∫ base64 –≤ localStorage –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
        const reader = new FileReader();
        reader.onload = () => {
          const base64 = reader.result as string;
          localStorage.setItem(storageKey, base64);
          console.log(`‚úÖ –§–∞–π–ª ${file.name} —Å–æ—Ö—Ä–∞–Ω—ë–Ω —Å –∫–ª—é—á–æ–º: ${storageKey}`);
          
          // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º temporary URL –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
          localStorage.setItem(`${storageKey}_url`, audioUrl);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å
          const saved = localStorage.getItem(storageKey);
          console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${saved ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
        };
        reader.readAsDataURL(file);
        
        setUploadStatus(prev => ({ ...prev, [fileId]: 'uploaded' }));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
      }
    }
  };

  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
      <Card className="w-full max-w-2xl max-h-[80vh] overflow-y-auto">
        <CardContent className="p-6">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-xl font-semibold">–ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤</h2>
            <Button variant="ghost" size="icon" onClick={onClose}>
              <Icon name="X" size={20} />
            </Button>
          </div>

          <div className="mb-6 p-4 bg-blue-50 rounded-lg">
            <h3 className="font-medium mb-2 flex items-center gap-2">
              <Icon name="Info" size={16} className="text-blue-600" />
              –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ
            </h3>
            <ol className="text-sm text-blue-800 space-y-1 list-decimal list-inside">
              <li>–°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª—ã —Å Mail.ru Cloud –ø–æ —Å—Å—ã–ª–∫–µ: <a href="https://cloud.mail.ru/public/bsFp/vkbT876fD" target="_blank" rel="noopener noreferrer" className="underline">cloud.mail.ru/public/bsFp/vkbT876fD</a></li>
              <li>–†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤ —Å –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞–º–∏</li>
              <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ø–æ–ª–µ –Ω–∏–∂–µ</li>
              <li>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: MP3, WAV, OGG</li>
            </ol>
          </div>

          <div className="space-y-6">
            {/* –û—Å–Ω–æ–≤–Ω—ã–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã */}
            <div>
              <h3 className="font-medium mb-3">–û—Å–Ω–æ–≤–Ω—ã–µ –∑–≤—É–∫–∏</h3>
              <div className="space-y-3">
                {audioFiles.map(file => (
                  <div key={file.id} className="flex items-center gap-3 p-3 border rounded-lg">
                    <div className="flex-1">
                      <div className="font-medium text-sm">{file.label}</div>
                      <div className="text-xs text-muted-foreground">{file.name}</div>
                    </div>
                    <Input
                      type="file"
                      accept="audio/*"
                      onChange={(e) => handleFileUpload(e, file.id)}
                      className="w-40"
                    />
                    {uploadStatus[file.id] === 'uploaded' && (
                      <Icon name="CheckCircle" className="text-green-500" size={20} />
                    )}
                  </div>
                ))}
              </div>
            </div>

            {/* –ê—É–¥–∏–æ—Ñ–∞–π–ª—ã —è—á–µ–µ–∫ - –∑–∞–≥—Ä—É–∑–∫–∞ –ø–∞–ø–∫–æ–π */}
            <div>
              <h3 className="font-medium mb-3">–ù–æ–º–µ—Ä–∞ —è—á–µ–µ–∫ (–∑–∞–≥—Ä—É–∑–∫–∞ –ø–∞–ø–∫–∏)</h3>
              <div className="p-4 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50">
                <div className="text-center">
                  <Icon name="FolderOpen" size={32} className="text-gray-400 mx-auto mb-2" />
                  <div className="mb-3">
                    <div className="font-medium text-sm">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–∞–ø–∫—É —Å —Ñ–∞–π–ª–∞–º–∏ —è—á–µ–µ–∫</div>
                    <div className="text-xs text-muted-foreground mt-1">
                      –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ MP3-—Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ cells/ —Å—Ä–∞–∑—É
                    </div>
                  </div>
                  <Input
                    type="file"
                    accept="audio/*"
                    multiple
                    onChange={handleCellsFolderUpload}
                    className="w-full mb-2"
                  />
                  {uploadStatus['cells_folder'] === 'uploaded' && (
                    <div className="flex items-center justify-center gap-2 text-green-600 text-sm">
                      <Icon name="CheckCircle" size={16} />
                      –ü–∞–ø–∫–∞ —è—á–µ–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
                    </div>
                  )}
                </div>
              </div>
              <div className="text-xs text-muted-foreground mt-2">
                üí° –°–æ–≤–µ—Ç: –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ cells –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ (Ctrl+A –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ)
                <br />
                –ù–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä–∞–º —è—á–µ–µ–∫: 1.mp3, 2.mp3, 3.mp3 –∏ —Ç.–¥.
              </div>
            </div>
          </div>

          <div className="flex gap-2 mt-6">
            <Button onClick={onClose} className="flex-1">
              –ì–æ—Ç–æ–≤–æ
            </Button>
            <Button 
              variant="outline" 
              onClick={() => {
                console.log('=== –ü–†–û–í–ï–†–ö–ê –°–û–•–†–ê–ù–Å–ù–ù–´–• –§–ê–ô–õ–û–í ===');
                Object.keys(localStorage).forEach(key => {
                  if (key.startsWith('audio_')) {
                    console.log(`üìÅ ${key}: ${localStorage.getItem(key)?.slice(0, 50)}...`);
                  }
                });
                console.log('=== –ö–û–ù–ï–¶ –ü–†–û–í–ï–†–ö–ò ===');
              }}
            >
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–π–ª—ã
            </Button>
            <Button variant="outline" onClick={onClose}>
              –û—Ç–º–µ–Ω–∞
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default AudioUploader;