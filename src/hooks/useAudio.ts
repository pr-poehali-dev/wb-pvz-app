import { useCallback, useRef, useState } from 'react';

export const useAudio = () => {
  const audioRef = useRef<HTMLAudioElement>(null);
  const [isSpeaking, setIsSpeaking] = useState(false);

  // Web Speech API –¥–ª—è –æ–∑–≤—É—á–∫–∏
  const speak = useCallback((text: string, priority = false) => {
    if ('speechSynthesis' in window) {
      // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–∑–≤—É—á–∫—É –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      if (priority) {
        window.speechSynthesis.cancel();
      }
      
      const utterance = new SpeechSynthesisUtterance(text);
      utterance.lang = 'ru-RU';
      utterance.rate = 1.1;
      utterance.pitch = 1.0;
      utterance.volume = 0.8;
      
      utterance.onstart = () => setIsSpeaking(true);
      utterance.onend = () => setIsSpeaking(false);
      utterance.onerror = () => {
        setIsSpeaking(false);
        console.log('–û—à–∏–±–∫–∞ –æ–∑–≤—É—á–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º console.log:', text);
      };
      
      window.speechSynthesis.speak(utterance);
    } else {
      console.log('–û–ó–í–£–ß–ö–ê:', text);
      // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
      const toast = document.createElement('div');
      toast.textContent = `üîä ${text}`;
      toast.className = 'fixed top-4 right-4 bg-primary text-white px-4 py-2 rounded-lg shadow-lg z-50 animate-fade-in';
      document.body.appendChild(toast);
      setTimeout(() => {
        document.body.removeChild(toast);
      }, 3000);
    }
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
  const playAudioFile = useCallback(async (audioType: 'cell' | 'discount' | 'camera' | 'rate', cellNumber?: number) => {
    try {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á –¥–ª—è localStorage
      let storageKey = '';
      
      switch (audioType) {
        case 'cell':
          storageKey = `audio_cells_${cellNumber || 1}`;
          break;
        case 'discount':
          storageKey = 'audio_discount';
          break;
        case 'camera':
          storageKey = 'audio_camera';
          break;
        case 'rate':
          storageKey = 'audio_rate';
          break;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ localStorage
      const uploadedFile = localStorage.getItem(storageKey);
      if (!uploadedFile) {
        console.warn(`‚ö†Ô∏è –ê—É–¥–∏–æ—Ñ–∞–π–ª –¥–ª—è "${audioType}" –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–∑–≤—É—á–∫—É" –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã.`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        const notification = document.createElement('div');
        notification.innerHTML = `
          <div style="position: fixed; top: 20px; right: 20px; background: #f59e0b; color: white; padding: 12px 16px; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.2); z-index: 9999; font-family: system-ui; font-size: 14px; max-width: 300px;">
            <div style="font-weight: 600; margin-bottom: 4px;">üîä –û–∑–≤—É—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>
            <div>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –¥–ª—è "${audioType}" –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö</div>
          </div>
        `;
        document.body.appendChild(notification);
        setTimeout(() => document.body.removeChild(notification), 3000);
        return;
      }

      console.log(`üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${audioType}${cellNumber ? ` (—è—á–µ–π–∫–∞ ${cellNumber})` : ''}`);

      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏–∑ localStorage
      if (audioRef.current) {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º src –∫–∞–∫ data URL –∏–∑ localStorage
        audioRef.current.src = uploadedFile;
        
        const playPromise = audioRef.current.play();
        setIsSpeaking(true);

        if (playPromise !== undefined) {
          playPromise.then(() => {
            console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º: ${audioType}`);
          }).catch((error) => {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è ${audioType}:`, error);
            setIsSpeaking(false);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            const errorNotification = document.createElement('div');
            errorNotification.innerHTML = `
              <div style="position: fixed; top: 20px; right: 20px; background: #dc2626; color: white; padding: 12px 16px; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.2); z-index: 9999; font-family: system-ui; font-size: 14px; max-width: 300px;">
                <div style="font-weight: 600; margin-bottom: 4px;">‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è</div>
                <div>–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –¥–ª—è "${audioType}"</div>
              </div>
            `;
            document.body.appendChild(errorNotification);
            setTimeout(() => document.body.removeChild(errorNotification), 3000);
          });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        audioRef.current.onended = () => {
          setIsSpeaking(false);
          console.log(`üéµ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: ${audioType}`);
        };

        audioRef.current.onerror = (error) => {
          setIsSpeaking(false);
          console.error(`‚ùå –û—à–∏–±–∫–∞ –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è ${audioType}:`, error);
        };
        
      } else {
        console.warn('‚ùå AudioRef –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
      }
      
    } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
      setIsSpeaking(false);
    }
  }, []);

  return {
    audioRef,
    isSpeaking,
    speak,
    playAudioFile
  };
};